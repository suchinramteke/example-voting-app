pipeline {
    agent none
  
    stages {
        stage('build') {
            agent {
                docker{
                    image 'maven:3.6.1-jdk-8-slim'
                    args '-v $HOME/.m2:/root/.m2'
                }
         }
            steps {
                echo 'Compiling worked app'
                dir('worker'){
                    sh 'mvn compile'
                }
            }
        }
         stage('test') {
             agent {
                docker{
                    image 'maven:3.6.1-jdk-8-slim'
                    args '-v $HOME/.m2:/root/.m2'
                }
            }
            steps {
                echo 'Running unit test on worker app'
                dir('worker'){
                    sh 'mvn clean test'
                }
            }
        }
         stage('package') {
                agent {
                    docker{
                        image 'maven:3.6.1-jdk-8-slim'
                        args '-v $HOME/.m2:/root/.m2'
                    }
        }
            steps {
                echo 'Packing worker app'
                dir('worker'){
                    sh 'mvn package -DskipTests'
                    archiveArtifacts artifacts: '**/target/*.jar', fingerprint:true
                }
            }
        }

        stage('docker-package') {
            agent any
            steps {
                echo 'Docker Packing worker app'
               script{
                   docker.withRegistry('https://index.docker.io/v1', 'dockerlogin'){
                       def workerImage = docker.build("suchin/worker:v${env.BUILD_ID}","./worker")
                       workerImage.push()
                       workerImage.push("${env.BRANCH_NAME}")

                   }
               }
            }
        }
    }
    post {
        always{
            echo 'Build pipeline for worker is completed ...'
        }
    }
}
